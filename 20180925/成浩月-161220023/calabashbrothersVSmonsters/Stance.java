package calabashbrothersVSmonsters;

abstract class Stance {
	static final int dimension=13;
	char[][] station=
		{{0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0},
		 {0,0,0,0,0,0,0,0,0,0,0,0,0}};
}

/*0为空位
 * 1-7为葫芦娃
 * 8为爷爷
 * y为蝎子精
 * s为蛇精
 * a为小喽啰
 * */

class CraneWing extends Stance{
	/*
	 * 0,0,0,0,0,0,8,0,0,0,0,0,0
	 * 0,0,0,0,0,0,7,0,0,0,0,0,0
	 * 0,0,0,0,0,0,6,0,0,0,0,0,0
	 * 0,0,0,0,0,0,5,0,0,0,0,0,0
	 * 0,0,0,0,0,0,4,0,0,0,0,0,0
	 * 0,0,0,0,0,0,3,0,0,0,0,0,0
	 * 0,0,0,0,0,0,2,0,0,0,0,0,0
	 * 0,0,0,a,0,0,1,0,0,a,0,0,0
	 * 0,0,0,0,a,0,0,0,a,0,0,0,0
	 * 0,0,0,0,0,a,0,a,0,0,0,0,0
	 * 0,0,0,0,0,0,y,0,0,0,0,0,0
	 * 0,0,0,0,0,0,s,0,0,0,0,0,0
	 * 0,0,0,0,0,0,0,0,0,0,0,0,0
	 * */
	CraneWing(){
		for(int i=0;i<8;i++)
			station[i][6]=(char) (8-i);
		station[7][3]=station[7][9]='a';
		station[8][4]=station[8][8]='a';
		station[9][5]=station[9][7]='a';
		station[10][6]='y';
		station[11][6]='s';
	}
}

class WildGooseRow extends Stance{
   /*[[0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,7,0,0,0,0,0,0,0,0,0]
	  [0,0,0,6,0,0,0,0,0,0,a,0,0]
	  [0,0,0,5,0,0,0,0,0,a,0,0,0]
	  [0,0,8,1,0,0,0,0,y,s,0,0,0]
	  [0,0,0,2,0,0,0,a,0,0,0,0,0]
	  [0,0,0,3,0,0,a,0,0,0,0,0,0]
	  [0,0,0,4,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]]*/
	WildGooseRow(){
		for(int i=0;i<3;i++)
			station[3+i][3]=(char)(7-i);
		for(int i=0;i<4;i++)
			station[6+i][3]=(char)(i+1);
		station[6][2]=8;
		for(int i=0;i<5;i++)
			station[4+i][10-i]='a';
		station[6][8]='y';
		station[6][9]='s';
	}
}

class CrossBar extends Stance{
   /*[[0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,7,0,0,0,0,a,0,0,0,0]
	  [0,0,0,6,0,0,0,a,0,0,0,0,0]
	  [0,0,0,5,0,0,0,0,a,0,0,0,0]
	  [0,0,8,1,0,0,0,y,s,0,0,0,0]
	  [0,0,0,2,0,0,0,0,a,0,0,0,0]
	  [0,0,0,3,0,0,0,a,0,0,0,0,0]
	  [0,0,0,4,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]]*/
	CrossBar(){
		for(int i=0;i<3;i++)
			station[3+i][3]=(char)(7-i);
		for(int i=0;i<4;i++)
			station[6+i][3]=(char)(i+1);
		station[6][2]=8;
		for(int i=0;i<6;i+=2)
			station[3+i][8]=station[4+i][7]='a';
		station[6][7]='y';
		station[6][8]='s';
	}
}

class SerpentArray extends Stance{
	/*[[0,0,0,0,0,0,0,0,0,0,0,0,0]
	   [0,0,0,0,0,0,0,0,0,0,0,0,0]
       [0,0,0,0,0,0,0,0,0,0,0,0,0]
	   [0,0,0,0,0,0,7,0,0,0,0,0,0]
	   [0,0,0,0,0,0,6,0,0,0,0,0,0]
	   [0,0,0,0,0,0,5,0,0,0,0,0,0]
	   [0,0,0,0,0,0,4,0,0,0,0,0,0]
	   [0,0,0,0,0,0,3,0,0,0,0,0,0]
	   [0,0,0,0,0,0,2,0,0,0,0,0,0]
	   [0,0,0,0,0,0,1,0,0,0,0,0,0]
	   [0,0,0,0,0,0,0,0,0,0,0,0,0]
	   [0,0,0,0,0,0,0,0,0,0,0,0,0]
	   [0,0,0,0,0,0,0,0,0,0,0,0,0]]*/
	SerpentArray(){
		for(int i=0;i<7;i++)
			station[3+i][6]=(char)(7-i);
	}
}

class FishScale extends Stance{
   /*[[0,0,0,0,0,0,7,0,0,0,0,0,0]
	  [0,0,0,0,0,0,6,0,0,0,0,0,0]
	  [0,0,0,0,0,0,5,0,0,0,0,0,0]
	  [0,0,0,0,0,0,4,0,0,0,0,0,0]
	  [0,0,0,0,0,0,3,0,0,0,0,0,0]
	  [0,0,0,0,0,0,2,0,0,0,0,0,0]
	  [0,0,0,0,0,0,1,0,0,0,0,0,0]
	  [0,0,0,0,0,0,8,0,0,0,0,0,0]
	  [0,0,0,0,0,0,y,0,0,0,0,0,0]
	  [0,0,0,0,0,a,s,a,0,0,0,0,0]
	  [0,0,0,0,a,0,a,0,a,0,0,0,0]
	  [0,0,0,a,0,a,0,a,0,a,0,0,0]
	  [0,0,0,0,0,0,a,0,0,0,0,0,0]]*/
	FishScale(){
		for(int i=0;i<7;i++)
			station[i][6]=(char)(7-i);
		station[7][6]=8;
		for(int i=0;i<3;i++)
			station[9+i][5-i]='a';
		for(int i=0;i<3;i++)
			station[9+i][7-i]='a';
		for(int i=0;i<3;i++)
			station[10+i][8-i]='a';
		station[11][9]='a';
		station[8][6]='y';
		station[9][6]='s';
	}
}

class SquareCircle extends Stance{
   /*[[0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,7,0,0,0,0,0,0,0,0,0]
	  [0,0,0,6,0,0,0,0,a,0,0,0,0]
	  [0,0,0,5,0,0,0,a,0,a,0,0,0]
	  [0,0,8,1,0,0,y,0,s,0,a,0,0]
	  [0,0,0,2,0,0,0,a,0,a,0,0,0]
	  [0,0,0,3,0,0,0,0,a,0,0,0,0]
	  [0,0,0,4,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]]*/
	SquareCircle(){
		for(int i=0;i<3;i++)
			station[3+i][3]=(char)(7-i);
		for(int i=0;i<4;i++)
			station[6+i][3]=(char)(i+1);
		station[6][2]=8;
		for(int i=0;i<3;i++)
			station[4+i][8-i]=station[4+i][8+i]='a';
		for(int i=0;i<2;i++)
			station[7+i][7+i]=station[7+i][9-i]='a';
		station[6][6]='y';
		station[6][8]='s';
	}
}

class CrescentMoon extends Stance{
   /*[[0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,a,0]
	  [0,0,0,7,0,0,0,0,a,0,a,0,0]
	  [0,0,0,6,0,0,0,a,0,a,0,0,0]
	  [0,0,0,5,0,a,a,0,a,0,0,0,0]
	  [0,0,8,1,0,y,a,s,a,0,0,0,0]
	  [0,0,0,2,0,a,a,0,a,0,0,0,0]
	  [0,0,0,3,0,0,0,a,0,a,0,0,0]
	  [0,0,0,4,0,0,0,0,a,0,a,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,a,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]
	  [0,0,0,0,0,0,0,0,0,0,0,0,0]]*/
	CrescentMoon(){
		for(int i=0;i<3;i++)
			station[3+i][3]=(char)(7-i);
		for(int i=0;i<4;i++)
			station[6+i][3]=(char)(i+1);
		station[6][2]=8;
		for(int i=0;i<6;i++)
			station[5+i][6+i]='a';
		for(int i=0;i<6;i++)
			station[2+i][11-i]='a';
		for(int i=0;i<2;i++)
			station[3+i][8-i]=station[9-i][8-i]='a';
		for(int i=0;i<3;i++)
			station[6][6+i]='a';
		for(int i=0;i<3;i++)
			station[5+i][5]='a';
		station[6][5]='y';
		station[6][7]='s';
	}
}

class Arrow extends Stance{
   /*[[0,0,0,0,0,0,7,0,0,0,0,0,0]
	  [0,0,0,0,0,0,6,0,0,0,0,0,0]
	  [0,0,0,0,0,0,5,0,0,0,0,0,0]
	  [0,0,0,0,0,0,4,0,0,0,0,0,0]
	  [0,0,0,0,0,0,3,8,0,0,0,0,0]
	  [0,0,0,0,0,0,2,0,0,0,0,0,0]
	  [0,0,0,0,0,0,1,0,0,0,0,0,0]
	  [0,0,0,0,0,0,y,s,0,0,0,0,0]
	  [0,0,0,0,0,a,a,a,0,0,0,0,0]
	  [0,0,0,0,a,0,a,0,a,0,0,0,0]
	  [0,0,0,a,0,0,a,0,0,a,0,0,0]
	  [0,0,0,0,0,0,a,0,0,0,0,0,0]
	  [0,0,0,0,0,0,a,0,0,0,0,0,0]]*/
	Arrow(){
		for(int i=0;i<7;i++)
			station[i][6]=(char)(7-i);
		station[4][7]=8;
		for(int i=0;i<3;i++)
			station[8+i][5-i]=station[8+i][7+i]='a';
		for(int i=0;i<5;i++)
			station[8+i][6]='a';
		station[7][6]='y';
		station[7][7]='s';
	}
}